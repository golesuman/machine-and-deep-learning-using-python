# -*- coding: utf-8 -*-
"""HyperTunning

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rcqIulm8ubgrjmodl5LJWyKSGQLs0zad
"""

from sklearn import svm,datasets
iris=datasets.load_iris()

import pandas as pd
df=pd.DataFrame(iris.data,columns=iris.feature_names)
iris.target_names

df['flower']=iris.target
df['flower']=df['flower'].apply(lambda x: iris.target_names[x])
df.head()

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(iris.data,iris.target,train_size=0.75)

model=svm.SVC(kernel='rbf', C=30, gamma='auto')
model.fit(x_train,y_train)
model.score(x_test,y_test)

from sklearn.model_selection import cross_val_score

cross_val_score(svm.SVC(kernel='linear', C=10, gamma='auto'), iris.data, iris.target, cv=5)

cross_val_score(svm.SVC(kernel='rbf', C=20, gamma='auto'), iris.data, iris.target, cv=5)

cross_val_score(svm.SVC(kernel='rbf', C=30, gamma='auto'), iris.data, iris.target, cv=5)

import numpy as np
kernels=['rbf','linear']
c=[1,10,20]
avg_score={}
for kval in kernels:
  for cval in c:
      cv_score=cross_val_score(svm.SVC(kernel=kval, C=cval, gamma='auto'), iris.data, iris.target, cv=5)
      avg_score[kval+ '_' +str(cval)]=np.average(cv_score)
avg_score

from sklearn.model_selection import GridSearchCV
clf=GridSearchCV(svm.SVC(gamma='auto'),
{
  'C':[1,10,20],
  'kernel':['rbf', 'linear']
},cv=5, return_train_score=False)
clf.fit(iris.data,iris.target)
clf.cv_results_

from sklearn.model_selection import RandomizedSearchCV
Rm=RandomizedSearchCV(svm.SVC(gamma='auto'),
{
  'C':[1,10,20],
  'kernel':['rbf', 'linear']
},cv=5, return_train_score=False,n_iter=5)
Rm.fit(iris.data,iris.target)
Rm.cv_results_
df2=pd.DataFrame(Rm.cv_results_)
df2